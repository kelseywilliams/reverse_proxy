worker_processes auto;

# Global error log
error_log /logs/nginx_error.log warn;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
    accept_mutex on;
}

http {
    # Essential for proper CSS/JS serving
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Define log format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    # Global access log
    access_log /logs/nginx_access.log main;

    # Zone 1: General website traffic (10 requests per second)
    limit_req_zone $binary_remote_addr zone=general_limit:10m rate=10r/s;
    
    # Zone 2: API endpoints (5 requests per second)
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=5r/s;
    
    # Zone 3: Authentication endpoints (5 requests per minute - very strict!)
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/m;
    
    # Zone 4: Connection limiting (max concurrent connections per IP)
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;
    
    # Status code for rate limit responses
    limit_req_status 429;
    limit_conn_status 429;
    
    # Log rate limit events
    limit_req_log_level warn;

    server {
        listen 80 default_server;
        server_name _;
        resolver 127.0.0.11;
        
        # Log HTTP redirects
        access_log /logs/http_redirects.log main;
        error_log /logs/http_redirects_error.log warn;

        location ^~ /.well-known/acme-challenge/ {
            root /certbot;
        }
        
        return 301 https://$host$request_uri;
    }
    
    server {
        listen 443 ssl;
        server_name kelseywilliams.co;
        resolver 127.0.0.11;
        ssl_certificate_key /certs/home/privkey.pem;
        ssl_certificate /certs/home/fullchain.pem;
        
        # Server-specific logs
        access_log /logs/home_access.log main;
        error_log /logs/home_error.log warn;

        limit_req zone=general_limit burst=20 nodelay;
        limit_conn conn_limit 10;

        location ^~ /.well-known/acme-challenge/ {
            root /certbot;
        }

        # Mouse application - must come first
        location ^~ /mouse/ {
            # Mouse application logs
            access_log /logs/mouse_access.log main;
            error_log /logs/mouse_error.log warn;

            # Rate limit for mouse app
            limit_req zone=general_limit burst=15 nodelay;

            proxy_pass http://mouse:3001/; 
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Socket.io for mouse
        location /socket.io/ {
            # Socket.io logs
            access_log /logs/socket_access.log main;
            error_log /logs/socket_error.log warn;
            
            # More lenient for real-time connections
            limit_req zone=general_limit burst=50 nodelay;

            set $upstream http://mouse:3001;
            proxy_pass $upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Rewrite clean URLs to .html files
        location / {
            # Main location logs
            access_log /logs/main_access.log main;
            error_log /logs/main_error.log warn;
            
            # Fix relative stylesheet paths - redirect incorrect paths to correct ones
            rewrite ^/about/stylesheets/(.*)$ /stylesheets/$1 permanent;
            rewrite ^/input/stylesheets/(.*)$ /stylesheets/$1 permanent;
            
            # Fix relative script paths if needed
            rewrite ^/about/scripts/(.*)$ /scripts/$1 permanent;
            rewrite ^/input/scripts/(.*)$ /scripts/$1 permanent;
            
            # Rewrite /about or /about/ to /about.html
            rewrite ^/about/?$ /about.html last;
            
            # Rewrite /input or /input/ to /input.html  
            rewrite ^/input/?$ /input.html last;
            
            # Add more rewrites as needed:
            # rewrite ^/contact/?$ /contact.html last;
            
            # Proxy everything to home service
            proxy_pass http://home:3027;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    } 
    server{
        listen 80;
        server_name api.kelseywilliams.co;

        access_log /logs/http_redirects.log main;
        error_log /logs/http_redirects_error.log warn;

        location ^~ /.well-known/acme-challenge/ {
            root /certbot;
        }

        return 301 https://$host$request_uri;
    }
    server {
        listen 443 ssl;
        server_name api.kelseywilliams.co;
        resolver 127.0.0.11;

        ssl_certificate_key /certs/api/privkey.pem;
        ssl_certificate /certs/api/fullchain.pem;

        access_log /logs/api_access.log main;
        error_log /logs/api_error.log warn;

        # Apply API rate limiting globally to this server
        # This means EVERY endpoint gets: 5 req/sec + max 5 concurrent connections
        limit_req zone=api_limit burst=10 nodelay;
        limit_conn conn_limit 5;

        location ^~ /.well-known/acme-challenge/ {
            root /certbot;
        }

        # Stricter rate limiting for authentication endpoints
        location ~ ^/auth/(register|login|logout|delete) {
            # Very strict rate limiting for auth endpoints (5 req/min)
            limit_req zone=auth_limit burst=3 nodelay;
            
            proxy_pass http://api:3028;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Moderate rate limiting for verification endpoints
        location ~ ^/auth/(user|admin) {
            # Less restrictive for verification endpoints (still uses api_limit from server level)
            # These inherit the server-level api_limit (5 req/sec)
            
            proxy_pass http://api:3028;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
